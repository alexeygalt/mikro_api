#version: '3.9'
#
#services:
#  db:
#    image: postgres:16.2
#    restart: always
#    shm_size: 128mb
#    ports:
#      - '5432:5432'
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: test
#      POSTGRES_DB: mikro_db
#
#
#  cache:
#    image: redis:7.2.4-alpine
#    restart: always
#    ports:
#      - '6379:6379'
#
#  #  rabbitmq:
#  #    image: rabbitmq:3-management
#  #    restart: always
#  #    ports:
#  #      - '5672:5672'
#  #      - '15672:15672'
#
#  zookeeper:
#    image: docker.io/bitnami/zookeeper:3.9
#    ports:
#      - "2181:2181"
#    volumes:
#      - "zookeeper_data:/bitnami"
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes
#
#  kafka:
#    image: docker.io/bitnami/kafka:3.4
#    ports:
#      - "9092:9092"
#    volumes:
#      - "kafka_data:/bitnami"
#    environment:
#      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#      KAFKA_BROKER_ID: 1
#      KAFKA_DELETE_BROKER_ENABLE: "true"
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#      KAFKA_SCHEMA_REGISTRY_URL: "schemaregistry:8085"
#      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
#      KAFKA_JMX_PORT: 9991
#    depends_on:
#      - zookeeper
#
#  schemaregistry:
#    image: pravega/schemaregistry
#    restart: always
#    depends_on:
#      - zookeeper
#    environment:
#      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
#      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
#      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8085"
#    ports:
#      - 18085:8085
#
#  kafdrop:
#    image: obsidiandynamics/kafdrop:3.31.0-SNAPSHOT
#    depends_on:
#      - kafka
#      - schemaregistry
#    environment:
#      KAFKA_BROKERCONNECT: kafka:9092
#      CMO_ARGS: "--message.format=AVRO --message.keyFormat=DEFAULT --schemaregistry.connect=http://schemaregistry:8085"
#
#volumes:
#  zookeeper_data:
#    driver: local
#  kafka_data:
#    driver: local

version: â€˜3.7'

services:
  db:
    image: postgres:16.2
    restart: always
    shm_size: 128mb
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
      POSTGRES_DB: mikro_db


  cache:
    image: redis:7.2.4-alpine
    restart: always
    ports:
      - '6379:6379'

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SCHEMA_REGISTRY_URL: "schemaregistry:8085"

  schemaregistry:
    image: confluentinc/cp-schema-registry:latest
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka:9092"
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_HOST_NAME: "schemaregistry"
    depends_on:
      - kafka

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: always
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKER_CONNECT: "kafka:9092"
      CMO_ARGS: "--message.format=AVRO --message.keyFormat=DEFAULT --schemaregistry.connect=http://schemaregistry:8085"
    depends_on:
      - kafka
      - schemaregistry
