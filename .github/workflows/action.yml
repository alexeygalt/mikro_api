on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.12" ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run:
            |
          python -m pip install --upgrade pip
          pip install poetry
          poetry lock --no-update
          poetry install
      - name: Black
        run: poetry run black app
      - name: Ruff
        run: poetry run ruff check app

  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.12" ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run:
            |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
          pip install twisted
      - name: Run Unit Tests
        run:  pytest tests/unit



#name : CI
#on:
#  push:
#    branches: ["main"]
#  pull_request:
#    branches: ["main"]
#
#jobs:
#  lint:
#    runs-on: ubuntu-latest
#    steps:
#    - name: install dependencies
#      run:
#        |
#        python -m pip install --upgrade pip
#        pip install poetry
#        poetry install
#    - name: black
#      run: poetry run black up
#    - name: ruff
#      run: poetry run ruff check app
#
#  unit-test:
#    runs-on: ubuntu-latest
#    steps:
#      - name: install dependencies
#        run:
#          |
#          python -m pip install --upgrade pip
#          pip install poetry
#          poetry install
#      - name: run unit test
#        run: poetry run pytest tests/unit
#
#
#
#
